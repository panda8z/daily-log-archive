(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{354:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"（1）系列教程介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）系列教程介绍"}},[t._v("#")]),t._v(" （1）系列教程介绍")]),t._v(" "),s("p",[t._v("我们编译生成的可执行文件一般，会生成在当前的编译路径下，也就是build或者release路径下。那么如何将编译生成的可执行文件和库文件打包到一起进行发布那？本片教程我们将讲述如何在cmake中配置install的打包路径。下面我们将以mathlib库和头文件为例子进行配置。")]),t._v(" "),s("h2",{attrs:{id:"（2）cmake-的使用环境和安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）cmake-的使用环境和安装"}},[t._v("#")]),t._v(" （2）CMake 的使用环境和安装")]),t._v(" "),s("p",[t._v("本教程的使用环境为：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ubutu18.04 lts\ngcc version 7.5.0\ng++ version 7.5.0\ncmake version 3.10.2\n")])])]),s("p",[t._v("安装cmake：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("sudo apt install cmake\n")])])]),s("h2",{attrs:{id:"（3）设置设置我们的程序输出为lib文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）设置设置我们的程序输出为lib文件"}},[t._v("#")]),t._v(" （3）设置设置我们的程序输出为lib文件")]),t._v(" "),s("p",[t._v("配置库文件、头文件和执行文件到install的目录下，cmake中的install根目录为CMAKE_INSTALL_PREFIX变量的路径，如果我们要设置配置路径可以使用set命令设置CMAKE_INSTALL_PREFIX变量的值来改变路径。一般默认情况CMAKE_INSTALL_PREFIX变量的值为,在UNIX系统中为：/usr/local，在windows系统中为：c:/Program Files/${PROJECT_NAME}")]),t._v(" "),s("p",[t._v("首先，看一下整体的目录结构")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("|-- tutorial_fourth/\n  |-- src/\n      |-- tutorial.cpp\n  |-- include/\n      |--TutorialConfig.h.in\n  |-- mathlib/\n      |-- CMakeLists.txt\n      |-- mathlib.h\n      |-- mathlib.cpp\n  |-- CMakeLists.txt\n")])])]),s("p",[t._v("根目录下的CMakeLists.txt文件为：")]),t._v(" "),s("div",{staticClass:"language-cmake extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置cmake的最低版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cmake_minimum_required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置工程名称 和版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("project")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置指定的C++编译器版本是必须的，如果不设置，或者为OFF，则指定版本不可用时，会使用上一版本。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD_REQUIRED")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("ON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定为C++11 版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_STANDARD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提供一个选项是OFF或者ON，如果没有初始值被提供则默认使用OFF")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Use tutorial provided math implementation"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("ON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定版本号的配置文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("configure_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("include/TutorialConfig.h.in TutorialConfig.h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断变量USE_MYMATH是否设置了ON，如果设置了配置MathFunctions library")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USE_MYMATH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加一个名字为MathFunctions的子编译路径")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_subdirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mathlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出MathFunctions库的所有项目，并添加到外部库变量EXTRA_LIBS中")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND EXTRA_LIBS mathlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 将子路径"${PROJECT_SOURCE_DIR}/mathlib"添加到外部路径变量EXTRA_INCLUDES中')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPEND EXTRA_INCLUDES "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_SOURCE_DIR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/mathlib"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("endif")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增加生成可执行文件，生成的程序名称为：tutorial_first")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_executable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial src/tutorial.cpp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对目标的外部库进行链接操作，需要放在定义了tutorial以后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_link_libraries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("EXTRA_LIBS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为指定项目添加 include 路径,需要放在定义了tutorial以后")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("target_include_directories")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tutorial "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PUBLIC")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),t._v("EXTRA_INCLUDES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面配置install，根目录为 CMAKE_INSTALL_PREFIX变量中的路径")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置可执行文件到安装路径 CMAKE_INSTALL_PREFIX的bin中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS tutorial DESTINATION bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置程序的头文件到安装路径 CMAKE_INSTALL_PREFIX的include文件中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("PROJECT_BINARY_DIR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/TutorialConfig.h"')]),t._v("\n  DESTINATION include\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("mathlib路径下CMakeLists.txt文件为：")]),t._v(" "),s("div",{staticClass:"language-cmake extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成库文件名为mathlib的静态库")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_library")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mathlib "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("STATIC")]),t._v(" mysqrt.cpp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以配置STATIC、SHARED和MODULE")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置动态库的版本 为1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SET_TARGET_PROPERTIES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mathlib "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("PROPERTIES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("VERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("SOVERSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将程序段额依赖库输出到安装路径 CMAKE_INSTALL_PREFIX的lib文件夹中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS mathlib DESTINATION lib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将文件mathlib.h输出到安装目录 CMAKE_INSTALL_PREFIX下的include文件夹中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FILES mathlib.h DESTINATION include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("命令使用：\ninstall: 配置程序打包过程中的目标（TARGETS）、文件（FILES）、路径（DIRECTORY）、代码（CODE）和输出配置（EXPORT）")]),t._v(" "),s("div",{staticClass:"language-cmake extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS <target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("... [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("{FILES | PROGRAMS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" <file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("... [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DIRECTORY <dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("... [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SCRIPT <file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CODE <code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EXPORT <export-name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" [...]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("使用demo：")]),t._v(" "),s("div",{staticClass:"language-cmake extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cmake"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TARGETS myExe mySharedLib myStaticLib\n        RUNTIME DESTINATION bin\n        LIBRARY DESTINATION lib\n        ARCHIVE DESTINATION lib/static"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"（4）使用cmake进行编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（4）使用cmake进行编译"}},[t._v("#")]),t._v(" （4）使用CMake进行编译")]),t._v(" "),s("p",[t._v("CMake在生成文件的过程中会生成很多中间缓存文件，为了使项目更简洁，文件路径更清楚，一般会在项目的root目录下建立一个文件夹，用于存储CMake生成的中间文件。而一般使用的文件家名称为build或者release。下面是使用命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入项目的root目录，本文为：tutorial_first")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" tutorial\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建存储缓存文件的文件夹，build")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" build\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用CMake命令生成makefile文件")]),t._v("\ncmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用make命令进行编译")]),t._v("\ncmake --build "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);